{
    "title": "Bureaucrat",
    "slogan": "simple queues, blobs, tables and trees",
    "description": "Bureaucrat is a credential-less service with queues, blobs, tables and trees.",
    "links": [
        {
            "href": "https://hub.docker.com/r/coderookieerick/bureaucrat",
            "text": "View in dockerhub"
        },
        {
            "href": "https://github.com/LostSavannah/bureaucrat",
            "text": "View in github"
        }
    ],
    "html_paragraphs":[
        "A lightweight experimental credential-less service with queues, tables, blobs and trees built on top of <a href=\"https://fastapi.tiangolo.com/\">FastApi</a>"
    ],
    "md_paragraphs":[
        {
            "title": "Admin site",
            "text": "In the hosting machine you can access the admin site in this location: [http://localhost:19760/](http://localhost:19760/)"
        }
    ],
    "services":[
        {
            "name": "Queues",
            "html_description": [
                "Bureacrat uses a very straightfoward in-memory queue paradigm. Any queue gets created when needed (when any queue or dequeue operation is requested in a queue). Futhermore every queue can be deleted on demand."
            ],
            "endpoints":[
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/queues/",
                    "description": "Lists every queue"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/queues/{name}",
                    "description": "Dequeues from the {name} queue"
                },
                {
                    "type": "POST",
                    "method": "POST-green.svg",
                    "path": "/queues/{name}",
                    "description": "Enqueues in the {name} queue"
                },
                {
                    "type": "DELETE",
                    "method": "DELETE-red.svg",
                    "path": "/queues/{name}",
                    "description": "Deletes the {name} queue"
                }
            ]
        },
        {
            "name": "Blobs",
            "html_description": [
                "The blob service consists in a simple plain storage. The name given to any blob is purely logic. The physical location for every blob is set by the <strong>BUREAUCRAT_BLOBS_ROOT</strong> environment variable, which should point to an existing writable folder."
            ],
            "endpoints":[
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/blobs/{full_path}",
                    "description": "Get the index of the logic {full_path} location"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/blobs/download:{full_path}",
                    "description": "Downloads the blob in the logic {full_path} location"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/blobs/raw:{full_path}",
                    "description": "Gets the content of the blob in the logic {full_path} location as a base64 string"
                },
                {
                    "type": "POST",
                    "method": "POST-green.svg",
                    "path": "/blobs/{full_path}",
                    "description": "Writes a file in the logic {full_path} location"
                },
                {
                    "type": "DELETE",
                    "method": "DELETE-red.svg",
                    "path": "/blobs/{full_path}",
                    "description": "Deletes the file in the logic {full_path} location"
                }
            ]
        },
        {
            "name": "Tables",
            "html_description": [
                "This service is just a backend for sqlite3 databases. The root path for every database is set by the <strong>BUREAUCRAT_TABLES_DATABASE</strong> environment variable, which should point to an existing writable folder." 
            ],
            "endpoints":[
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/tables/",
                    "description": "List every database"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/tables/{database}",
                    "description": "List every table in the {database}"
                },
                {
                    "type": "POST",
                    "method": "POST-green.svg",
                    "path": "/tables/{database}",
                    "description": "Executes in the {database} the query sent in the body and returns the result"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/tables/{database}/{table}",
                    "description": "Retrieves every record in the {table} in the {database}"
                }
            ]
        },
        {
            "name": "Trees",
            "html_description": [
                "The trees service is just a bunch of folders with some json files. Folders are called <strong>forests</strong> and json files are called <strong>trees</strong>. You can freely navigate and update any tree inside any forest. The physical location for the root of every forest is set in the <strong>BUREAUCRAT_TREES_ROOT</strong> environment variable, which should point to an existing writable folder."
            ],
            "endpoints":[
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/trees/",
                    "description": "List every available forest"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/trees/{forest}",
                    "description": "Lists every available tree in the {forest}"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/trees/{forest}/{tree}/index:{path}",
                    "description": "Gets the index for the node located in the {path} inside the {tree} belonging to the specified {forest}"
                },
                {
                    "type": "GET",
                    "method": "GET-blue.svg",
                    "path": "/trees/{forest}/{tree}/{path}",
                    "description": "Gets the content of the node located in the {path} inside the {tree} belonging to the specified {forest}"
                },
                {
                    "type": "POST",
                    "method": "POST-green.svg",
                    "path": "/trees/{forest}/{tree}/{path}",
                    "description": "Sets the content of the node located in the {path} inside the {tree} belonging to the specified {forest}"
                }
            ]
        }
    ],
    "repository": "https://github.com/LostSavannah/bureaucrat",
    "badges":[
        {
            "title": "Bureaucrat",
            "action": "build",
            "branches": ["publish"]
        }
    ]
}